# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
# env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use 'alacritty' if it is
  # available, otherwise 'xterm-256color' is used.
  #
  # TERM: xterm-256color

window:
  dynamic_title: true
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  dimensions:
    columns: 0
    lines: 0
  opacity: 1

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is not scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 2
    y: 2

  # Window decorations
  #
  # Available values:
  # - `full`: Window with title bar and title bar buttons
  # - `none`: Window without title bar, rounded corners, or drop shadow
  # - `transparent`: Window with title bar with transparent background and title
  #   bar buttons
  # - `buttonless`: Window with title bar with transparent background and no
  #   title bar buttons
  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #     - buttonless: Title bar, transparent background and title bar buttons
  #     - transparent: Title bar, transparent background, but no title bar buttons
  decorations: none
  option_as_alt: Both

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

  # Faux Scrolling
  #
  # The `faux_multiplier` setting controls the number of lines the terminal
  # should scroll when the alternate screen buffer is active. This is used
  # to allow mouse scrolling for applications like `man`.
  #
  # Specifying `0` will disable faux scrolling.
  # faux_multiplier: 3

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
# tabspaces: 8

# Font configuration (changes require restart)
font:
  # Normal (roman) font face
  normal:
    family: FiraCode Nerd Font
    # The `style` can be specified to pick a specific face.
    style: Regular

  # Italic font face
  bold:
    family: FiraCode Nerd Font
    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    family: FiraCode Nerd Font
    # The `style` can be specified to pick a specific face.
    style: Italic

  # Point size
  size: 12.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0

  # Scale the font size based on the monitor's DPI. This will lead to bigger text on HiDPI
  # screens and make reading text a little easier.
  scale_with_dpi: true

  # Thin stroke font rendering (OS X only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  # deprecated
  # use_thin_strokes: true

# Display the time it takes to redraw each frame.
# render_timer: false

# Use custom cursor colors. If `true`, the `colors.cursor.foreground` and
# `colors.cursor.background` colors will be used to display the cursor.
# Otherwise the cell colors are inverted for the cursor.
custom_cursor_colors: false

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
bell:
  animation: EaseOutExpo
  duration: 0

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
# DEPRECATED: use window.opacity instead
# background_opacity: 1.0

# Mouse bindings
#
# Available fields:
# - mouse
# - action
# - mods (optional)
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }
  url_launcher: firefox

selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

hide_cursor_when_typing: false

# Cursor style
#
# Values for 'cursor_style':
#   - Block
#   - Underline
#   - Beam
cursor_style: Block

# If this is `true`, the cursor will be rendered as a hollow box when the
# window is not focused.
unfocused_hollow_cursor: true

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
shell:
  program: /bin/zsh
  args:
    - --login

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify
# a key and modifiers required to trigger it, terminal modes where the binding
# is applicable, and whaz should be done when the key binding fires. It can
# either send a byte sequnce to the running application (`chars`), execute
# a predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Example:
#   `- { key: V, mods: Command, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
# Values for `mods`:
#   - Command
#   - Control
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
#
key_bindings:
  - { key: Paste,                                       action: Paste          }
  - { key: Copy,                                        action: Copy           }
  - { key: L,         mods: Control,                    action: ClearLogNotice }
  - { key: L,         mods: Control, mode: ~Vi|~Search, chars: "\x0c"          }
  - { key: PageUp,    mods: Shift,   mode: ~Alt,        action: ScrollPageUp   }
  - { key: PageDown,  mods: Shift,   mode: ~Alt,        action: ScrollPageDown }
  - { key: Home,      mods: Shift,   mode: ~Alt,        action: ScrollToTop    }
  - { key: End,       mods: Shift,   mode: ~Alt,        action: ScrollToBottom }

  # Vi Mode
  - { key: Space,  mods: Shift|Control, mode: ~Search,    action: ToggleViMode            }
  - { key: Space,  mods: Shift|Control, mode: Vi|~Search, action: ScrollToBottom          }
  - { key: Escape,                      mode: Vi|~Search, action: ClearSelection          }
  - { key: I,                           mode: Vi|~Search, action: ToggleViMode            }
  - { key: I,                           mode: Vi|~Search, action: ScrollToBottom          }
  - { key: C,      mods: Control,       mode: Vi|~Search, action: ToggleViMode            }
  - { key: Y,      mods: Control,       mode: Vi|~Search, action: ScrollLineUp            }
  - { key: E,      mods: Control,       mode: Vi|~Search, action: ScrollLineDown          }
  - { key: G,                           mode: Vi|~Search, action: ScrollToTop             }
  - { key: G,      mods: Shift,         mode: Vi|~Search, action: ScrollToBottom          }
  - { key: B,      mods: Control,       mode: Vi|~Search, action: ScrollPageUp            }
  - { key: F,      mods: Control,       mode: Vi|~Search, action: ScrollPageDown          }
  - { key: U,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageUp        }
  - { key: D,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageDown      }
  - { key: Y,                           mode: Vi|~Search, action: Copy                    }
  - { key: Y,                           mode: Vi|~Search, action: ClearSelection          }
  - { key: Copy,                        mode: Vi|~Search, action: ClearSelection          }
  - { key: V,                           mode: Vi|~Search, action: ToggleNormalSelection   }
  - { key: V,      mods: Shift,         mode: Vi|~Search, action: ToggleLineSelection     }
  - { key: V,      mods: Control,       mode: Vi|~Search, action: ToggleBlockSelection    }
  - { key: V,      mods: Alt,           mode: Vi|~Search, action: ToggleSemanticSelection }
  - { key: Return,                      mode: Vi|~Search, action: Open                    }
  - { key: Z,                           mode: Vi|~Search, action: CenterAroundViCursor    }
  - { key: K,                           mode: Vi|~Search, action: Up                      }
  - { key: J,                           mode: Vi|~Search, action: Down                    }
  - { key: H,                           mode: Vi|~Search, action: Left                    }
  - { key: L,                           mode: Vi|~Search, action: Right                   }
  - { key: Up,                          mode: Vi|~Search, action: Up                      }
  - { key: Down,                        mode: Vi|~Search, action: Down                    }
  - { key: Left,                        mode: Vi|~Search, action: Left                    }
  - { key: Right,                       mode: Vi|~Search, action: Right                   }
  - { key: Key0,                        mode: Vi|~Search, action: First                   }
  - { key: Key4,   mods: Shift,         mode: Vi|~Search, action: Last                    }
  - { key: Key6,   mods: Shift,         mode: Vi|~Search, action: FirstOccupied           }
  - { key: H,      mods: Shift,         mode: Vi|~Search, action: High                    }
  - { key: M,      mods: Shift,         mode: Vi|~Search, action: Middle                  }
  - { key: L,      mods: Shift,         mode: Vi|~Search, action: Low                     }
  - { key: B,                           mode: Vi|~Search, action: SemanticLeft            }
  - { key: W,                           mode: Vi|~Search, action: SemanticRight           }
  - { key: E,                           mode: Vi|~Search, action: SemanticRightEnd        }
  - { key: B,      mods: Shift,         mode: Vi|~Search, action: WordLeft                }
  - { key: W,      mods: Shift,         mode: Vi|~Search, action: WordRight               }
  - { key: E,      mods: Shift,         mode: Vi|~Search, action: WordRightEnd            }
  - { key: Key5,   mods: Shift,         mode: Vi|~Search, action: Bracket                 }
  - { key: Slash,                       mode: Vi|~Search, action: SearchForward           }
  - { key: Slash,  mods: Shift,         mode: Vi|~Search, action: SearchBackward          }
  - { key: N,                           mode: Vi|~Search, action: SearchNext              }
  - { key: N,      mods: Shift,         mode: Vi|~Search, action: SearchPrevious          }

  # Search Mode
  - { key: Return,                mode: Search|Vi,  action: SearchConfirm         }
  - { key: Escape,                mode: Search,     action: SearchCancel          }
  - { key: C,      mods: Control, mode: Search,     action: SearchCancel          }
  - { key: U,      mods: Control, mode: Search,     action: SearchClear           }
  - { key: W,      mods: Control, mode: Search,     action: SearchDeleteWord      }
  - { key: P,      mods: Control, mode: Search,     action: SearchHistoryPrevious }
  - { key: N,      mods: Control, mode: Search,     action: SearchHistoryNext     }
  - { key: Up,                    mode: Search,     action: SearchHistoryPrevious }
  - { key: Down,                  mode: Search,     action: SearchHistoryNext     }
  - { key: Return,                mode: Search|~Vi, action: SearchFocusNext       }
  - { key: Return, mods: Shift,   mode: Search|~Vi, action: SearchFocusPrevious   }

  # (Windows, Linux, and BSD only)
  #- { key: V,              mods: Control|Shift, mode: ~Vi,        action: Paste            }
  #- { key: C,              mods: Control|Shift,                   action: Copy             }
  #- { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }
  #- { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }
  #- { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }
  #- { key: Insert,         mods: Shift,                           action: PasteSelection   }
  #- { key: Key0,           mods: Control,                         action: ResetFontSize    }
  #- { key: Equals,         mods: Control,                         action: IncreaseFontSize }
  #- { key: Plus,           mods: Control,                         action: IncreaseFontSize }
  #- { key: NumpadAdd,      mods: Control,                         action: IncreaseFontSize }
  #- { key: Minus,          mods: Control,                         action: DecreaseFontSize }
  #- { key: NumpadSubtract, mods: Control,                         action: DecreaseFontSize }

  # (Windows only)
  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }

  # (macOS only)
  - { key: K,              mods: Command, mode: ~Vi|~Search, chars: "\x0c"                 }
  - { key: K,              mods: Command, mode: ~Vi|~Search, action: ClearHistory          }
  - { key: Key0,           mods: Command,                    action: ResetFontSize         }
  - { key: Equals,         mods: Command,                    action: IncreaseFontSize      }
  - { key: Plus,           mods: Command,                    action: IncreaseFontSize      }
  - { key: NumpadAdd,      mods: Command,                    action: IncreaseFontSize      }
  - { key: Minus,          mods: Command,                    action: DecreaseFontSize      }
  - { key: NumpadSubtract, mods: Command,                    action: DecreaseFontSize      }
  - { key: V,              mods: Command,                    action: Paste                 }
  - { key: C,              mods: Command,                    action: Copy                  }
  - { key: C,              mods: Command, mode: Vi|~Search,  action: ClearSelection        }
  - { key: H,              mods: Command,                    action: Hide                  }
  - { key: H,              mods: Command|Alt,                action: HideOtherApplications }
  - { key: M,              mods: Command,                    action: Minimize              }
  - { key: Q,              mods: Command,                    action: Quit                  }
  - { key: W,              mods: Command,                    action: Quit                  }
  - { key: N,              mods: Command,                    action: CreateNewWindow       }
  - { key: F,              mods: Command|Control,            action: ToggleFullscreen      }
  - { key: F,              mods: Command, mode: ~Search,     action: SearchForward         }
  - { key: B,              mods: Command, mode: ~Search,     action: SearchBackward        }
    
schemes:
  # Tokyo Night theme, based on both:
  #   https://github.com/ghifarit53/tokyonight-vim
  #   https://github.com/enkia/tokyo-night-vscode-theme
  tokyo-night: &tokyo-night
    # Default colors
    primary:
      background: '0x1a1b26'
      foreground: '0xa9b1d6'

    # Normal colors
    normal:
      black:   '0x32344a'
      red:     '0xf7768e'
      green:   '0x9ece6a'
      yellow:  '0xe0af68'
      blue:    '0x7aa2f7'
      magenta: '0xad8ee6'
      cyan:    '0x449dab'
      white:   '0x787c99'

    # Bright colors
    bright:
      black:   '0x444b6a'
      red:     '0xff7a93'
      green:   '0xb9f27c'
      yellow:  '0xff9e64'
      blue:    '0x7da6ff'
      magenta: '0xbb9af7'
      cyan:    '0x0db9d7'
      white:   '0xacb0d0'

  tokyo-night-storm: &tokyo-night-storm
    # Default colors
    primary:
      background: '0x24283b'
      foreground: '0xFFFFFF'

    # Normal colors
    normal:
      black:   '0x32344a'
      red:     '0xf7768e'
      green:   '0x9ece6a'
      yellow:  '0xe0af68'
      blue:    '0x7aa2f7'
      magenta: '0xad8ee6'
      cyan:    '0x449dab'
      white:   '0x9699a8'

    # Bright colors
    bright:
      black:   '0x444b6a'
      red:     '0xff7a93'
      green:   '0xb9f27c'
      yellow:  '0xff9e64'
      blue:    '0x7da6ff'
      magenta: '0xbb9af7'
      cyan:    '0x0db9d7'
      white:   '0xacb0d0'

  catppuccin-latte: &catppuccin-latte
    # Default colors
    primary:
        background: "#EFF1F5" # base
        foreground: "#4C4F69" # text
        # Bright and dim foreground colors
        dim_foreground: "#4C4F69" # text
        bright_foreground: "#4C4F69" # text

    # Cursor colors
    cursor:
        text: "#EFF1F5" # base
        cursor: "#DC8A78" # rosewater
    vi_mode_cursor:
        text: "#EFF1F5" # base
        cursor: "#7287FD" # lavender

    # Search colors
    search:
        matches:
            foreground: "#EFF1F5" # base
            background: "#6C6F85" # subtext0
        focused_match:
            foreground: "#EFF1F5" # base
            background: "#40A02B" # green
        footer_bar:
            foreground: "#EFF1F5" # base
            background: "#6C6F85" # subtext0

    # Keyboard regex hints
    hints:
        start:
            foreground: "#EFF1F5" # base
            background: "#DF8E1D" # yellow
        end:
            foreground: "#EFF1F5" # base
            background: "#6C6F85" # subtext0

    # Selection colors
    selection:
        text: "#EFF1F5" # base
        background: "#DC8A78" # rosewater

    # Normal colors
    normal:
        black: "#5C5F77" # subtext1
        red: "#D20F39" # red
        green: "#40A02B" # green
        yellow: "#DF8E1D" # yellow
        blue: "#1E66F5" # blue
        magenta: "#EA76CB" # pink
        cyan: "#179299" # teal
        white: "#ACB0BE" # surface2

    # Bright colors
    bright:
        black: "#6C6F85" # subtext0
        red: "#D20F39" # red
        green: "#40A02B" # green
        yellow: "#DF8E1D" # yellow
        blue: "#1E66F5" # blue
        magenta: "#EA76CB" # pink
        cyan: "#179299" # teal
        white: "#BCC0CC" # surface1

    # Dim colors
    dim:
        black: "#5C5F77" # subtext1
        red: "#D20F39" # red
        green: "#40A02B" # green
        yellow: "#DF8E1D" # yellow
        blue: "#1E66F5" # blue
        magenta: "#EA76CB" # pink
        cyan: "#179299" # teal
        white: "#ACB0BE" # surface2

    indexed_colors:
        - { index: 16, color: "#FE640B" }
        - { index: 17, color: "#DC8A78" }

  catppuccin-mocha: &catppuccin-mocha
    primary:
        background: "#1E1E2E" # base
        foreground: "#CDD6F4" # text
        # Bright and dim foreground colors
        dim_foreground: "#CDD6F4" # text
        bright_foreground: "#CDD6F4" # text

    # Cursor colors
    cursor:
        text: "#1E1E2E" # base
        cursor: "#F5E0DC" # rosewater
    vi_mode_cursor:
        text: "#1E1E2E" # base
        cursor: "#B4BEFE" # lavender

    # Search colors
    search:
        matches:
            foreground: "#1E1E2E" # base
            background: "#A6ADC8" # subtext0
        focused_match:
            foreground: "#1E1E2E" # base
            background: "#A6E3A1" # green
        footer_bar:
            foreground: "#1E1E2E" # base
            background: "#A6ADC8" # subtext0

    # Keyboard regex hints
    hints:
        start:
            foreground: "#1E1E2E" # base
            background: "#F9E2AF" # yellow
        end:
            foreground: "#1E1E2E" # base
            background: "#A6ADC8" # subtext0

    # Selection colors
    selection:
        text: "#1E1E2E" # base
        background: "#F5E0DC" # rosewater

    # Normal colors
    normal:
        black: "#45475A" # surface1
        red: "#F38BA8" # red
        green: "#A6E3A1" # green
        yellow: "#F9E2AF" # yellow
        blue: "#89B4FA" # blue
        magenta: "#F5C2E7" # pink
        cyan: "#94E2D5" # teal
        white: "#BAC2DE" # subtext1

    # Bright colors
    bright:
        black: "#585B70" # surface2
        red: "#F38BA8" # red
        green: "#A6E3A1" # green
        yellow: "#F9E2AF" # yellow
        blue: "#89B4FA" # blue
        magenta: "#F5C2E7" # pink
        cyan: "#94E2D5" # teal
        white: "#A6ADC8" # subtext0

    # Dim colors
    dim:
        black: "#45475A" # surface1
        red: "#F38BA8" # red
        green: "#A6E3A1" # green
        yellow: "#f9e2af" # yellow
        blue: "#89b4fa" # blue
        magenta: "#f5c2e7" # pink
        cyan: "#94e2d5" # teal
        white: "#bac2de" # subtext1

    indexed_colors:
        - { index: 16, color: "#fab387" }
        - { index: 17, color: "#f5e0dc" }

  github-light: &github-light
    # Default colors
    primary:
      background: '0xffffff'
      foreground: '0x1F2328'

    # Cursor colors
    #
    # These will only be used when the `custom_cursor_colors` field is set to `true`.
    cursor:
      text: '0xffffff'
      cursor: '0x1f2328'

    # Normal colors
    normal:
      black: '0x24292f'
      red: '0xcf222e'
      green: '0x116329'
      yellow: '0x4d2d00'
      blue: '0x0969da'
      magenta: '0x8250df'
      cyan: '0x1b7c83'
      white: '0x6e7781'

    # Bright colors
    bright:
      black: '0x57606a'
      red: '0xa40e26'
      green: '0x1a7f37'
      yellow: '0x633c01'
      blue: '0x218bff'
      magenta: '0x8250df'
      cyan: '0x1b7c83'
      white: '0x6e7781'

colors: *catppuccin-latte
